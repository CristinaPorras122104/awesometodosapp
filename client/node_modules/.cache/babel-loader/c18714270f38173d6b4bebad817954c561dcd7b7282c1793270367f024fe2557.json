{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richmar\\\\awesometodos\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [content, setContent] = useState(\"\");\n\n  // Fetch todos on component mount\n  useEffect(() => {\n    const getTodos = async () => {\n      const res = await fetch(\"/api/todos\");\n      const todos = await res.json();\n      setTodos(todos);\n    };\n    getTodos();\n  }, []);\n\n  // Handle creating a new todo\n  const createNewTodo = async e => {\n    e.preventDefault();\n    if (content.length > 3) {\n      const res = await fetch(\"/api/todos\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          todo: content\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const newTodo = await res.json();\n      setContent(\"\");\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  // Update todo status\n  const updateTodo = async (id, status) => {\n    const updatedStatus = !status; // Toggle the current status\n    const res = await fetch(`/api/todos/${id}`, {\n      method: \"PATCH\",\n      // Assuming you use PATCH for partial updates\n      body: JSON.stringify({\n        status: updatedStatus\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const updatedTodo = await res.json();\n\n    // Update the todos list with the updated todo\n    setTodos(todos.map(todo => todo._id === id ? updatedTodo : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Awesome Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: createNewTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Enter a new todo...\",\n        className: \"form__input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.length > 0 ? todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        updateTodo: updateTodo // Pass the updateTodo function as a prop\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No todos available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"znq5taD1vvqjqT8r2k3ZJiIwbQk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","todos","setTodos","useState","content","setContent","useEffect","getTodos","res","fetch","json","createNewTodo","e","preventDefault","length","method","body","JSON","stringify","todo","headers","newTodo","updateTodo","id","status","updatedStatus","updatedTodo","map","_id","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","Todo","_c","$RefreshReg$"],"sources":["C:/Users/richmar/awesometodos/client/src/App.jsx"],"sourcesContent":["export default function App() {\n  const [todos, setTodos] = useState([]);\n  const [content, setContent] = useState(\"\");\n\n  // Fetch todos on component mount\n  useEffect(() => {\n    const getTodos = async () => {\n      const res = await fetch(\"/api/todos\");\n      const todos = await res.json();\n      setTodos(todos);\n    };\n\n    getTodos();\n  }, []);\n\n  // Handle creating a new todo\n  const createNewTodo = async (e) => {\n    e.preventDefault();\n    if (content.length > 3) {\n      const res = await fetch(\"/api/todos\", {\n        method: \"POST\",\n        body: JSON.stringify({ todo: content }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const newTodo = await res.json();\n      setContent(\"\");\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  // Update todo status\n  const updateTodo = async (id, status) => {\n    const updatedStatus = !status;  // Toggle the current status\n    const res = await fetch(`/api/todos/${id}`, {\n      method: \"PATCH\",  // Assuming you use PATCH for partial updates\n      body: JSON.stringify({ status: updatedStatus }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const updatedTodo = await res.json();\n\n    // Update the todos list with the updated todo\n    setTodos(todos.map((todo) =>\n      todo._id === id ? updatedTodo : todo\n    ));\n  };\n\n  return (\n    <main className=\"container\">\n      <h1 className=\"title\">Awesome Todos</h1>\n      \n      <form className=\"form\" onSubmit={createNewTodo}>\n        <input \n          type=\"text\" \n          value={content} \n          onChange={(e) => setContent(e.target.value)} \n          placeholder=\"Enter a new todo...\"\n          className=\"form__input\"\n          required \n        />\n        <button type=\"submit\">Create Todo</button>\n      </form>\n\n      <div className=\"todos\">\n        {todos.length > 0 ? (\n          todos.map((todo) => (\n            <Todo \n              todo={todo} \n              key={todo._id} \n              updateTodo={updateTodo}  // Pass the updateTodo function as a prop\n            />\n          ))\n        ) : (\n          <p>No todos available.</p>\n        )}\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}