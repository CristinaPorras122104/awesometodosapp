{"ast":null,"code":"import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Todo(props){// Define the updateTodo function inside Todo component\nconst updateTodo=async(todoId,todoStatus)=>{const res=await fetch(`/api/todos/${todoId}`,{method:\"PUT\",// Using PUT to update the entire resource\nbody:JSON.stringify({status:!todoStatus}),// Toggle the status\nheaders:{\"Content-Type\":\"application/json\"}});const json=await res.json();if(json.acknowledged){// Update the todos list in state if the update was successful\nprops.setTodos(currentTodos=>{return currentTodos.map(currentTodo=>{if(currentTodo._id===todoId){return{...currentTodo,status:!currentTodo.status};// Toggle status\n}return currentTodo;// Return the rest of the todos unchanged\n});});}};// Define the deleteTodo function inside the Todo component\nconst deleteTodo=async todoId=>{const res=await fetch(`/api/todos/${todoId}`,{method:\"DELETE\"// Using DELETE method to remove the todo\n});const json=await res.json();if(json.acknowledged){// Remove the todo from the list in state if deletion was successful\nprops.setTodos(currentTodos=>currentTodos.filter(todo=>todo._id!==todoId));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"todo\",children:[/*#__PURE__*/_jsx(\"p\",{children:props.todo.todo}),/*#__PURE__*/_jsxs(\"div\",{className:\"mutations\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"todo__status\",onClick:()=>updateTodo(props.todo._id,props.todo.status),children:props.todo.status?\"‚òë\":\"‚òê\"}),/*#__PURE__*/_jsx(\"button\",{className:\"todo__delete\",onClick:()=>deleteTodo(props.todo._id)// Call deleteTodo when button is clicked\n,children:\"\\uD83D\\uDDD1\\uFE0F\"})]})]});}","map":{"version":3,"names":["Todo","props","updateTodo","todoId","todoStatus","res","fetch","method","body","JSON","stringify","status","headers","json","acknowledged","setTodos","currentTodos","map","currentTodo","_id","deleteTodo","filter","todo","_jsxs","className","children","_jsx","onClick"],"sources":["C:/Users/richmar/awesometodos/client/src/Todo.jsx"],"sourcesContent":["export default function Todo(props) {\r\n    // Define the updateTodo function inside Todo component\r\n    const updateTodo = async (todoId, todoStatus) => {\r\n      const res = await fetch(`/api/todos/${todoId}`, {\r\n        method: \"PUT\",  // Using PUT to update the entire resource\r\n        body: JSON.stringify({ status: !todoStatus }),  // Toggle the status\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n  \r\n      const json = await res.json();\r\n  \r\n      if (json.acknowledged) {\r\n        // Update the todos list in state if the update was successful\r\n        props.setTodos(currentTodos => {\r\n          return currentTodos.map((currentTodo) => {\r\n            if (currentTodo._id === todoId) {\r\n              return { ...currentTodo, status: !currentTodo.status }; // Toggle status\r\n            }\r\n            return currentTodo;  // Return the rest of the todos unchanged\r\n          });\r\n        });\r\n      }\r\n    };\r\n  \r\n    // Define the deleteTodo function inside the Todo component\r\n    const deleteTodo = async (todoId) => {\r\n      const res = await fetch(`/api/todos/${todoId}`, {\r\n        method: \"DELETE\",  // Using DELETE method to remove the todo\r\n      });\r\n  \r\n      const json = await res.json();\r\n  \r\n      if (json.acknowledged) {\r\n        // Remove the todo from the list in state if deletion was successful\r\n        props.setTodos(currentTodos => currentTodos.filter(todo => todo._id !== todoId));\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"todo\">\r\n        <p>{props.todo.todo}</p>\r\n        <div className=\"mutations\">\r\n          <button\r\n            className=\"todo__status\"\r\n            onClick={() => updateTodo(props.todo._id, props.todo.status)}\r\n          >\r\n            {(props.todo.status) ? \"‚òë\" : \"‚òê\"}\r\n          </button>\r\n          <button\r\n            className=\"todo__delete\"\r\n            onClick={() => deleteTodo(props.todo._id)}  // Call deleteTodo when button is clicked\r\n          >\r\n            üóëÔ∏è\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  "],"mappings":"yDAAA,cAAe,SAAS,CAAAA,IAAIA,CAACC,KAAK,CAAE,CAChC;AACA,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOC,MAAM,CAAEC,UAAU,GAAK,CAC/C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAcH,MAAM,EAAE,CAAE,CAC9CI,MAAM,CAAE,KAAK,CAAG;AAChBC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,MAAM,CAAE,CAACP,UAAW,CAAC,CAAC,CAAG;AAChDQ,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACQ,IAAI,CAAC,CAAC,CAE7B,GAAIA,IAAI,CAACC,YAAY,CAAE,CACrB;AACAb,KAAK,CAACc,QAAQ,CAACC,YAAY,EAAI,CAC7B,MAAO,CAAAA,YAAY,CAACC,GAAG,CAAEC,WAAW,EAAK,CACvC,GAAIA,WAAW,CAACC,GAAG,GAAKhB,MAAM,CAAE,CAC9B,MAAO,CAAE,GAAGe,WAAW,CAAEP,MAAM,CAAE,CAACO,WAAW,CAACP,MAAO,CAAC,CAAE;AAC1D,CACA,MAAO,CAAAO,WAAW,CAAG;AACvB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,KAAM,CAAAE,UAAU,CAAG,KAAO,CAAAjB,MAAM,EAAK,CACnC,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAcH,MAAM,EAAE,CAAE,CAC9CI,MAAM,CAAE,QAAW;AACrB,CAAC,CAAC,CAEF,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACQ,IAAI,CAAC,CAAC,CAE7B,GAAIA,IAAI,CAACC,YAAY,CAAE,CACrB;AACAb,KAAK,CAACc,QAAQ,CAACC,YAAY,EAAIA,YAAY,CAACK,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACH,GAAG,GAAKhB,MAAM,CAAC,CAAC,CAClF,CACF,CAAC,CAED,mBACEoB,KAAA,QAAKC,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBC,IAAA,MAAAD,QAAA,CAAIxB,KAAK,CAACqB,IAAI,CAACA,IAAI,CAAI,CAAC,cACxBC,KAAA,QAAKC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBC,IAAA,WACEF,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAEA,CAAA,GAAMzB,UAAU,CAACD,KAAK,CAACqB,IAAI,CAACH,GAAG,CAAElB,KAAK,CAACqB,IAAI,CAACX,MAAM,CAAE,CAAAc,QAAA,CAE3DxB,KAAK,CAACqB,IAAI,CAACX,MAAM,CAAI,GAAG,CAAG,GAAG,CAC1B,CAAC,cACTe,IAAA,WACEF,SAAS,CAAC,cAAc,CACxBG,OAAO,CAAEA,CAAA,GAAMP,UAAU,CAACnB,KAAK,CAACqB,IAAI,CAACH,GAAG,CAAI;AAAA,CAAAM,QAAA,CAC7C,oBAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}