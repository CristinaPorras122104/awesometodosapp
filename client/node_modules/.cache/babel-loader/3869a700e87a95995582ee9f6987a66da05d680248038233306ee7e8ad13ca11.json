{"ast":null,"code":"import{useState,useEffect}from\"react\";// Import useState and useEffect\nimport Todo from\"./Todo\";// Import the Todo component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[todos,setTodos]=useState([]);// useState for managing todos\nconst[content,setContent]=useState(\"\");// useState for the content of a new todo\n// Fetch todos on component mount\nuseEffect(()=>{const getTodos=async()=>{const res=await fetch(\"/api/todos\");const todos=await res.json();setTodos(todos);};getTodos();},[]);// Empty dependency array means it runs once when the component mounts\n// Handle creating a new todo\nconst createNewTodo=async e=>{e.preventDefault();if(content.length>3){const res=await fetch(\"/api/todos\",{method:\"POST\",body:JSON.stringify({todo:content}),headers:{\"Content-Type\":\"application/json\"}});const newTodo=await res.json();// Reset content and update todos list\nsetContent(\"\");setTodos([...todos,newTodo]);}};return/*#__PURE__*/_jsxs(\"main\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Awesome Todos\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:createNewTodo,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:content,onChange:e=>setContent(e.target.value),placeholder:\"Enter a new todo...\",className:\"form__input\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Todo\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"todos\",children:todos.length>0?todos.map(todo=>/*#__PURE__*/_jsx(Todo,{todo:todo,setTodos:setTodos},todo._id)):/*#__PURE__*/_jsx(\"p\",{children:\"No todos available.\"})})]});}","map":{"version":3,"names":["useState","useEffect","Todo","jsx","_jsx","jsxs","_jsxs","App","todos","setTodos","content","setContent","getTodos","res","fetch","json","createNewTodo","e","preventDefault","length","method","body","JSON","stringify","todo","headers","newTodo","className","children","onSubmit","type","value","onChange","target","placeholder","required","map","_id"],"sources":["C:/Users/richmar/awesometodos/client/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";  // Import useState and useEffect\nimport Todo from \"./Todo\";  // Import the Todo component\n\nexport default function App() {\n  const [todos, setTodos] = useState([]);  // useState for managing todos\n  const [content, setContent] = useState(\"\");  // useState for the content of a new todo\n\n  // Fetch todos on component mount\n  useEffect(() => {\n    const getTodos = async () => {\n      const res = await fetch(\"/api/todos\");\n      const todos = await res.json();\n      setTodos(todos);\n    };\n\n    getTodos();\n  }, []);  // Empty dependency array means it runs once when the component mounts\n\n  // Handle creating a new todo\n  const createNewTodo = async (e) => {\n    e.preventDefault();\n    if (content.length > 3) {\n      const res = await fetch(\"/api/todos\", {\n        method: \"POST\",\n        body: JSON.stringify({ todo: content }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const newTodo = await res.json();\n      \n      // Reset content and update todos list\n      setContent(\"\");\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  return (\n    <main className=\"container\">\n      <h1 className=\"title\">Awesome Todos</h1>\n      \n      {/* Form for creating new todo */}\n      <form className=\"form\" onSubmit={createNewTodo}>\n        <input \n          type=\"text\" \n          value={content} \n          onChange={(e) => setContent(e.target.value)} \n          placeholder=\"Enter a new todo...\"\n          className=\"form__input\"\n          required \n        />\n        <button type=\"submit\">Create Todo</button>\n      </form>\n\n      {/* Display todos using Todo component */}\n      <div className=\"todos\">\n        {todos.length > 0 ? (\n          todos.map((todo) => (\n            <Todo todo={todo} setTodos={setTodos} key={todo._id} />\n          ))\n        ) : (\n          <p>No todos available.</p>\n        )}\n      </div>\n    </main>\n  );\n}\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAG;AAC9C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAAG;AACzC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAAG;AAE7C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,YAAY,CAAC,CACrC,KAAM,CAAAN,KAAK,CAAG,KAAM,CAAAK,GAAG,CAACE,IAAI,CAAC,CAAC,CAC9BN,QAAQ,CAACD,KAAK,CAAC,CACjB,CAAC,CAEDI,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAAG;AAET;AACA,KAAM,CAAAI,aAAa,CAAG,KAAO,CAAAC,CAAC,EAAK,CACjCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAIR,OAAO,CAACS,MAAM,CAAG,CAAC,CAAE,CACtB,KAAM,CAAAN,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,YAAY,CAAE,CACpCM,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,IAAI,CAAEd,OAAQ,CAAC,CAAC,CACvCe,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACF,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAb,GAAG,CAACE,IAAI,CAAC,CAAC,CAEhC;AACAJ,UAAU,CAAC,EAAE,CAAC,CACdF,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEkB,OAAO,CAAC,CAAC,CAC/B,CACF,CAAC,CAED,mBACEpB,KAAA,SAAMqB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACzBxB,IAAA,OAAIuB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cAGxCtB,KAAA,SAAMqB,SAAS,CAAC,MAAM,CAACE,QAAQ,CAAEb,aAAc,CAAAY,QAAA,eAC7CxB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAErB,OAAQ,CACfsB,QAAQ,CAAGf,CAAC,EAAKN,UAAU,CAACM,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CAC5CG,WAAW,CAAC,qBAAqB,CACjCP,SAAS,CAAC,aAAa,CACvBQ,QAAQ,MACT,CAAC,cACF/B,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,aAAW,CAAQ,CAAC,EACtC,CAAC,cAGPxB,IAAA,QAAKuB,SAAS,CAAC,OAAO,CAAAC,QAAA,CACnBpB,KAAK,CAACW,MAAM,CAAG,CAAC,CACfX,KAAK,CAAC4B,GAAG,CAAEZ,IAAI,eACbpB,IAAA,CAACF,IAAI,EAACsB,IAAI,CAAEA,IAAK,CAACf,QAAQ,CAAEA,QAAS,EAAMe,IAAI,CAACa,GAAM,CACvD,CAAC,cAEFjC,IAAA,MAAAwB,QAAA,CAAG,qBAAmB,CAAG,CAC1B,CACE,CAAC,EACF,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}